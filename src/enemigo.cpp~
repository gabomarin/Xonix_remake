#include "../include/enemigo.hpp"

Enemigo::Enemigo()
{
    file_= "resources/enemigo.png";
    bmp= IMG_Load("resources/enemigo.png");
    textura_ = surfaceToTex( file_, textura_);
    width_=bmp->w;
    height_=bmp->h;
    posx_=rand()%(SCREEN_WIDTH-128)+32;
    posy_=rand()%(SCREEN_HEIGHT-128)+32;
    direccion_= (rand()%3)+1;
   // direccion_= BOTTOM_LEFT;
//     printf("\n%i", direccion_);
    SDL_FreeSurface(bmp);
    estado_=false;
    vel_=2;
}

Enemigo::~Enemigo()
{
     glDeleteTextures( 1, &textura_);
}

void Enemigo:: setPosicion()
{
    if(direccion_==TOP_LEFT)
    {
	posx_-=vel_;
	posy_-=vel_;
    }
    
    else if(direccion_==TOP_RIGHT)
    {
	posx_+=vel_;
	posy_-=vel_;
    }
    
    else if(direccion_==BOTTOM_LEFT)
    {
	posx_-=vel_;
	posy_+=vel_;
    }
    
    else if(direccion_==BOTTOM_RIGHT)
    {
	posx_+=vel_;
	posy_+=vel_;
    }
}


void Enemigo::draw()
{
    
    textura_ = surfaceToTex( file_, textura_);
    glBindTexture( GL_TEXTURE_2D, textura_ );

    glBegin( GL_QUADS );

    glTexCoord2i( 0, 0 );
    glVertex3f( posx_, posy_, 0 );

    // Bottom-left vertex (corner)
    glTexCoord2i( 0, 1 );
    glVertex3f( posx_, posy_+height_, 0 );

    // Bottom-right vertex (corner)
    glTexCoord2i( 1, 1 );
    glVertex3f( posx_+width_, posy_+height_, 0 );

    // Top-right vertex (corner)
    glTexCoord2i( 1, 0 );
    glVertex3f( posx_+width_, posy_, 0 );
    glEnd();
    glDeleteTextures( 1, &textura_ ); //Elimina la textura
}

bool Enemigo::getEstado( )
{
    return estado_;
}

void Enemigo::setEstado(bool estado)
{
    estado_=estado;
    
}


int Enemigo:: getX()
{
    return posx_;
}

int Enemigo:: getY()
{
    return posy_;
}

int Enemigo:: getW()
{
    return width_;
}

int Enemigo:: getH()
{
    return height_;
}

void Enemigo:: setDirection(int dir)
{
    direccion_=dir;
}

int Enemigo:: getDirection()
{
    return direccion_;
}


int Enemigo:: getVel()
{
    return vel_;
}

void Enemigo:: setVel(int vel)
{
    vel_=vel;
}

