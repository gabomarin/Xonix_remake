
#include "../include/poligono.hpp"

Poligono::Poligono()
{
    file_= "resources/poligono.png";
    bmp= IMG_Load("resources/poligono.png");
}

Poligono::~Poligono()
{
    //destruw2 = enemigos[i].getW();
        h2 = enemigos[i].getH();
        x2 = enemigos[i].getX();
        y2 = enemigos[i].getY();ctor del objeto, por implementarse

}

void Poligono:: draw()
{
    textura_ = surfaceToTex( file_, textura_);
    
    glBindTexture( GL_TEXTURE_2D, textura_ );

    glBegin( GL_QUADS );


    //Top left vertex corner
    glTexCoord2i( 0, 0 );
    glVertex3f( v[TOP_LEFT].x , v[TOP_LEFT].y, 0 );

    // Bottom-left vertex (corner)
    glTexCoord2i( 0, 1 );
    glVertex3f( v[BOTTOM_LEFT].x, v[BOTTOM_LEFT].y, 0 );

    // Bottom-right vertex (corner)
    glTexCoord2i( 1, 1 );
    glVertex3f( v[BOTTOM_RIGHT].x, v[BOTTOM_RIGHT].y, 0 );

    // Top-right vertex (corner)
    glTexCoord2i( 1, 0 );
    glVertex3f(v[TOP_RIGHT].x, v[TOP_RIGHT].y, 0 );
    glEnd();
    glDeleteTextures( 1, &textura_ );
   
}


void Poligono:: insertVertex(GLuint x, GLuint y, int pos)
{
    v[pos].x=x;
    v[pos].y=y;
    nVertices++;
}

int Poligono:: getVertexX(int vertex)
{
    return v[vertex].x;
}

int Poligono:: getVertexY(int vertex)
{
    return v[vertex].y;
}

int Poligono:: getW()
{
    return width_;
}

int Poligono:: getH()
{
    return height_;
}

